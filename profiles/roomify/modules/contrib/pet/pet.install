<?php

/**
 * @file
 * Previewable Email Template module install/schema/update hooks.
 */

/**
 * Implementation of hook_schema().
 */
function pet_schema() {
  $schema = array();

  $schema['pets'] = array(
    'description' => 'Base table for previewable email templates.',
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'The internal identifier for any template.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
        'description' => 'The machine name of the template.',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'The human readable name of the template.',
        'default' => '',
      ),
      'subject' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'The template subject.',
        'default' => '',
      ),
      'mail_body' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'The template body.',
      ),
      'mail_body_plain' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'The template body in plain text form.',
      ),
      'send_plain' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x00,
        'size' => 'tiny',
        'description' => 'If true send email as plain text.',
      ),
      'recipient_callback' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'A recipient callback function, if any.',
        'default' => '',
      ),
      'from_override' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'Email to override system from address.',
        'default' => '',
      ),
      'cc_default' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'medium',
        'description' => 'Optional cc emails.',
      ),
      'bcc_default' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'medium',
        'description' => 'Optional bcc emails.',
      ),
      'token_entity_types' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'Token entity types.',
      ),
      'language' => array(
        'description' => 'The template language.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'active' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'Active status.',
      ),
    ),
    'primary key' => array('pid'),
  );

  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function pet_uninstall() {
}

/**
 * Add column token_entity_types.
 */
function pet_update_7001() {
  db_add_field('pets', 'token_entity_types', array(
    'type' => 'blob',
    'not null' => FALSE,
    'size' => 'big',
    'serialize' => TRUE,
    'description' => 'Token entity types.',
  ));
}

/**
 * Add column language.
 */
function pet_update_7002() {
  $language = language_default();

  db_add_field('pets', 'language', array(
    'description' => 'The template language.',
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => '',
    'initial' => $language->language,
  ));

  db_drop_unique_key('pets', 'name');
}

/**
 * Add column active.
 */
function pet_update_7003() {
  db_add_field('pets', 'active', array(
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0x01,
    'size' => 'tiny',
    'description' => 'Active status.',
  ));
}
